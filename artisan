#!/usr/bin/env php
<?php
require __DIR__.'/vendor/autoload.php';

use Illuminate\Container\Container;
use Illuminate\Support\Fluent;
use Illuminate\Support\Facades\Facade;

class Application extends Container 
{
	protected $version = '5.3';

	protected $basePath; 

	public function basePath()
	{
		return $this->basePath;
	}

	public function __construct()
	{
		$this['env'] = '';

		static::setInstance($this);
		$this->instance('app', $this);
		$this->instance('container', $this);

		$this->basePath = realpath(__DIR__);

		// configration
		$this->instance('config', new Fluent);
		$config['database'] = [
			'fetch' => PDO::FETCH_CLASS, 
			'default' => 'mysql', 
			'connections' => [
				'sqlite' => [
					'driver' => 'sqlite', 
					'database' => $this->basePath().'/storage/database.sqlite', 
					'prefix' => '', 
				], 
				'mysql' => [
					'driver' => 'mysql', 
					'host' => 'localhost', 
					'posr' => '3306', 
					'database' => basename($this->basePath()), 
					'username' => 'shokuryu', 
					'password' => 'shokuryu', 
					'charset' => 'utf8', 
					'collation' => 'utf8_unicode_ci', 
					'prefix' => '', 
					'strict' => false, 
					'engine' => null, 
				], 
			], 
			'migrations' => 'migrations', 
			'redis' => [
				'cluster' => false, 
				'default' => [
					'host' => 'locahost', 
					'password' => 'shokuryu', 
					'port' => 6379, 
					'database' => 0, 
				], 
			], 
		];
		foreach ($config as $prefix => $config)
		{
			foreach ($config as $name => $value)
			{
				$this['config'][$prefix.'.'.$name] = $value;
			}
		}
		
		// prividers
		$providers = [
			Illuminate\Events\EventServiceProvider::class, 
			Illuminate\Filesystem\FilesystemServiceProvider::class, 
			Illuminate\Database\DatabaseServiceProvider::class, 
			Illuminate\Database\MigrationServiceProvider::class, 
			Illuminate\Database\SeedServiceProvider::class, 
		];
		foreach ($providers as $provider)
		{
			(new $provider($this))->register();
		}

		// composer..
		$this->singleton('composer', function ($app)
		{
			return new Illuminate\Support\Composer($this['files'], $this->basePath());
		});
	}

	public function console()
	{
		$console = new Illuminate\Console\Application($this, $this['events'], $this->version);
		return $console->run();
	}
	public function environment()
	{
		return $this['env'];
	}
	public function databasePath()
	{
		return $this->basePath().'/src/database';
	}
}

$application = new Application;

$status = $application->console();